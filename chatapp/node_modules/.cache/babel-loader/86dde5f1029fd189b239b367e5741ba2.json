{"ast":null,"code":"import React, { isValidElement, useRef, useLayoutEffect, useEffect, cloneElement, useReducer, useState, forwardRef } from 'react';\nimport cx from 'clsx';\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction isToastIdValid(toastId) {\n  return toastId != null;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nconst POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nconst TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* Default.COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  const {\n    scrollHeight,\n    style\n  } = node;\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\n\nfunction cssTransition(_ref) {\n  let {\n    enter,\n    exit,\n    appendPosition = false,\n    collapse = true,\n    collapseDuration = 300\n    /* Default.COLLAPSE_DURATION */\n\n  } = _ref;\n  return function ToastTransition(_ref2) {\n    let {\n      children,\n      position,\n      preventExitTransition,\n      done,\n      nodeRef,\n      isIn\n    } = _ref2;\n    const enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    const exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    const animationStep = useRef(0\n    /* AnimationStep.Enter */\n    );\n    useLayoutEffect(() => {\n      const node = nodeRef.current;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = e => {\n        if (e.target !== nodeRef.current) return;\n        node.dispatchEvent(new Event(\"d\"\n        /* SyntheticEvent.ENTRANCE_ANIMATION_END */\n        ));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n\n        if (animationStep.current === 0\n        /* AnimationStep.Enter */\n        && e.type !== 'animationcancel') {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n    useEffect(() => {\n      const node = nodeRef.current;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = 1\n        /* AnimationStep.Exit */\n        ;\n        node.className += \" \" + exitClassName;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n    return React.createElement(React.Fragment, null, children);\n  };\n}\n\nfunction toToastItem(toast, status) {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n\nconst eventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event).filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit(event) {\n    this.list.has(event) && this.list.get(event).forEach(callback => {\n      const timer = setTimeout(() => {\n        // @ts-ignore\n        callback(...[].slice.call(arguments, 1));\n      }, 0);\n      this.emitQueue.has(event) || this.emitQueue.set(event, []);\n      this.emitQueue.get(event).push(timer);\n    });\n  }\n\n};\n\nconst Svg = _ref => {\n  let {\n    theme,\n    type,\n    ...rest\n  } = _ref;\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\",\n    ...rest\n  });\n};\n\nfunction Warning(props) {\n  return React.createElement(Svg, { ...props\n  }, React.createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\n\nfunction Info(props) {\n  return React.createElement(Svg, { ...props\n  }, React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\n\nfunction Success(props) {\n  return React.createElement(Svg, { ...props\n  }, React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\n\nfunction Error(props) {\n  return React.createElement(Svg, { ...props\n  }, React.createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\n\nfunction Spinner() {\n  return React.createElement(\"div\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__spinner\"\n  });\n}\n\nconst Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = type => type in Icons;\n\nfunction getIcon(_ref2) {\n  let {\n    theme,\n    type,\n    isLoading,\n    icon\n  } = _ref2;\n  let Icon = null;\n  const iconProps = {\n    theme,\n    type\n  };\n  if (icon === false) ;else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n  return Icon;\n}\n\nfunction useToastContainer(props) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map()).current;\n\n  const isToastActive = id => toastIds.indexOf(id) !== -1;\n\n  const instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* Event.WillUnmount */\n    ).on(0\n    /* Event.Show */\n    , buildToast).on(1\n    /* Event.Clear */\n    , toastId => containerRef.current && removeToast(toastId)).on(5\n    /* Event.ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* Event.DidMount */\n    , instance);\n    return () => {\n      toastToRender.clear();\n      eventManager.emit(3\n      /* Event.WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue(_ref) {\n    let {\n      containerId\n    } = _ref;\n    const {\n      limit\n    } = instance.props;\n\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    setToastIds(state => isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []);\n  }\n\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastProps,\n      staleId\n    } = instance.queue.shift();\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n\n  function buildToast(content, _ref2) {\n    let {\n      delay,\n      staleId,\n      ...options\n    } = _ref2;\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    const {\n      toastId,\n      updateId,\n      data\n    } = options;\n    const {\n      props\n    } = instance;\n\n    const closeToast = () => removeToast(toastId);\n\n    const isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    const toastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId), 'removed');\n        toastToRender.delete(toastId);\n        eventManager.emit(4\n        /* Event.Change */\n        , removed);\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n\n    };\n    toastProps.iconOut = getIcon(toastProps);\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast,\n        toastProps,\n        data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent,\n        toastProps,\n        staleId\n      });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    const {\n      toastId\n    } = toastProps;\n    if (staleId) toastToRender.delete(staleId);\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(4\n    /* Event.Change */\n    , toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated'));\n  }\n\n  function getToastToRender(cb) {\n    const toRender = new Map();\n    const collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(toast => {\n      const {\n        position\n      } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef(null);\n  const drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const {\n    autoClose,\n    pauseOnHover,\n    closeToast,\n    onClick,\n    closeOnClick\n  } = props;\n  useEffect(() => {\n    syncProps.current = props;\n  });\n  useEffect(() => {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* SyntheticEvent.ENTRANCE_ANIMATION_END */\n    , playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */\n      ) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent === 80\n        /* Default.DRAGGABLE_PERCENT */\n        ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const {\n        top,\n        bottom,\n        left,\n        right\n      } = drag.boundingRect;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    const toast = toastRef.current;\n\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */\n      ) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current;\n\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = e => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  let {\n    closeToast,\n    theme,\n    ariaLabel = 'close'\n  } = _ref;\n  return React.createElement(\"button\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: e => {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  let {\n    delay,\n    isRunning,\n    closeToast,\n    type,\n    hide,\n    className,\n    style: userStyle,\n    controlledProgress,\n    progress,\n    rtl,\n    isIn,\n    theme\n  } = _ref;\n  const style = { ...userStyle,\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  const defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, {\n    [\"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__progress-bar--rtl\"]: rtl\n  });\n  const classNames = isFn(className) ? className({\n    rtl,\n    type,\n    defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  const animationEvent = {\n    [controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd']: controlledProgress && progress < 1 ? null : () => {\n      isIn && closeToast();\n    }\n  }; // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style,\n    ...animationEvent\n  });\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nconst Toast = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__toast-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__toast--\" + type, {\n    [\"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__toast--rtl\"]: rtl\n  });\n  const cssClasses = isFn(className) ? className({\n    rtl,\n    position,\n    type,\n    defaultClassName\n  }) : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const closeButtonProps = {\n    closeToast,\n    type,\n    theme\n  };\n  let Close = null;\n  if (closeButton === false) ;else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n  return React.createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", {\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses,\n    ...eventHandlers,\n    style: style,\n    ref: toastRef\n  }, React.createElement(\"div\", { ...(isIn && {\n      role: role\n    }),\n    className: isFn(bodyClassName) ? bodyClassName({\n      type\n    }) : cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }, iconOut != null && React.createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__toast-icon\", {\n      [\"Toastify\"\n      /* Default.CSS_NAMESPACE */\n      + \"--animate-icon \" + \"Toastify\"\n      /* Default.CSS_NAMESPACE */\n      + \"__zoom-enter\"]: !isLoading\n    })\n  }, iconOut), React.createElement(\"div\", null, children)), Close, (autoClose || isProgressControlled) && React.createElement(ProgressBar, { ...(updateId && !isProgressControlled ? {\n      key: \"pb-\" + updateId\n    } : {}),\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  })));\n};\n\nconst Bounce = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nconst Slide = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__slide-exit\",\n  appendPosition: true\n});\nconst Zoom = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nconst Flip = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */\n  + \"__flip-exit\"\n}); // https://github.com/yannickcr/eslint-plugin-react/issues/3140\n\nconst ToastContainer = forwardRef((props, ref) => {\n  const {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  } = useToastContainer(props);\n  const {\n    className,\n    style,\n    rtl,\n    containerId\n  } = props;\n\n  function getClassName(position) {\n    const defaultClassName = cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__toast-container\", \"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    + \"__toast-container--\" + position, {\n      [\"Toastify\"\n      /* Default.CSS_NAMESPACE */\n      + \"__toast-container--rtl\"]: rtl\n    });\n    return isFn(className) ? className({\n      position,\n      rtl,\n      defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n\n  useEffect(() => {\n    if (ref) {\n      ref.current = containerRef.current;\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender((position, toastList) => {\n    const containerStyle = !toastList.length ? { ...style,\n      pointerEvents: 'none'\n    } : { ...style\n    };\n    return React.createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map((_ref, i) => {\n      let {\n        content,\n        props: toastProps\n      } = _ref;\n      return React.createElement(Toast, { ...toastProps,\n        isIn: isToastActive(toastProps.toastId),\n        style: { ...toastProps.style,\n          '--nth': i + 1,\n          '--len': toastList.length\n        },\n        key: \"toast-\" + toastProps.key\n      }, content);\n    }));\n  }));\n});\nToastContainer.displayName = 'ToastContainer';\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* Default.DRAGGABLE_PERCENT */\n  ,\n  draggableDirection: \"x\"\n  /* Direction.X */\n  ,\n  role: 'alert',\n  theme: 'light'\n};\nlet containers = new Map();\nlet latestInstance;\nlet queue = [];\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  let {\n    containerId\n  } = _ref;\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Event.Show */\n    , content, options);\n  } else {\n    queue.push({\n      content,\n      options\n    });\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return { ...options,\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  };\n}\n\nfunction createToastByType(type) {\n  return (content, options) => dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content, options) => dispatchToast(content, mergeOptions(TYPE.DEFAULT, {\n  isLoading: true,\n  autoClose: false,\n  closeOnClick: false,\n  closeButton: false,\n  draggable: false,\n  ...options\n}));\n\nfunction handlePromise(promise, _ref2, options) {\n  let {\n    pending,\n    error,\n    success\n  } = _ref2;\n  let id;\n\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, { ...options,\n      ...pending\n    });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (type, input, result) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, { ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, { ...baseParams,\n        ...params\n      });\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(result => resolver('success', success, result)).catch(err => resolver('error', error, err));\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\n\ntoast.dark = (content, options) => dispatchToast(content, mergeOptions(TYPE.DEFAULT, {\n  theme: 'dark',\n  ...options\n}));\n/**\r\n * Remove toast programmaticaly\r\n */\n\n\ntoast.dismiss = id => {\n  if (containers.size > 0) {\n    eventManager.emit(1\n    /* Event.Clear */\n    , id);\n  } else {\n    queue = queue.filter(t => isToastIdValid(id) && t.options.toastId !== id);\n  }\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return eventManager.emit(5\n  /* Event.ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = id => {\n  let isToastActive = false;\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(() => {\n    const toast = getToast(toastId, options);\n\n    if (toast) {\n      const {\n        props: oldOptions,\n        content: oldContent\n      } = toast;\n      const nextOptions = { ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      };\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = id => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Subscribe to change when a toast is added, removed and updated\r\n *\r\n * Usage:\r\n * ```\r\n * const unsubscribe = toast.onChange((payload) => {\r\n *   switch (payload.status) {\r\n *   case \"added\":\r\n *     // new toast added\r\n *     break;\r\n *   case \"updated\":\r\n *     // toast updated\r\n *     break;\r\n *   case \"removed\":\r\n *     // toast has been removed\r\n *     break;\r\n *   }\r\n * })\r\n * ```\r\n */\n\n\ntoast.onChange = callback => {\n  eventManager.on(4\n  /* Event.Change */\n  , callback);\n  return () => {\n    eventManager.off(4\n    /* Event.Change */\n    , callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* Event.DidMount */\n, containerInstance => {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(item => {\n    eventManager.emit(0\n    /* Event.Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* Event.WillUnmount */\n, containerInstance => {\n  containers.delete(containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Event.Show */\n    ).off(1\n    /* Event.Clear */\n    ).off(5\n    /* Event.ClearWaitingQueue */\n    );\n  }\n});\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","ToastTransition","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","animationStep","useRef","useLayoutEffect","current","classToToken","split","onEntered","e","target","dispatchEvent","Event","removeEventListener","type","classList","remove","onEnter","add","addEventListener","useEffect","onExited","onExit","className","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Warning","d","Info","Success","Error","Spinner","Icons","info","warning","success","error","spinner","maybeIcon","getIcon","Icon","iconProps","cloneElement","useToastContainer","forceUpdate","useReducer","x","toastIds","setToastIds","useState","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","buildToast","removeToast","clearWaitingQueue","clear","length","limit","state","dequeueToast","toastContent","toastProps","staleId","shift","appendToast","isNotValid","options","enableMultiContainer","updateId","delay","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","iconOut","onOpen","onClose","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","playToast","once","bindFocusEvents","unbindFocusEvents","onDragStart","bindDragEvents","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","document","hasFocus","window","onDragMove","onDragEnd","unbindDragEvents","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Toast","Transition","cssClasses","isProgressControlled","closeButtonProps","Close","ref","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","containers","latestInstance","container","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","handlePromise","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","t","isActive","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sources":["/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/utils/propValidator.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/utils/constant.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/utils/collapseToast.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/utils/cssTransition.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/utils/mapper.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/core/eventManager.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/Icons.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/hooks/useToastContainer.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/hooks/useToast.ts","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/CloseButton.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/ProgressBar.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/Toast.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/Transitions.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/components/ToastContainer.tsx","/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/node_modules/react-toastify/src/core/toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId != null;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n      return () => {\n        toastToRender.clear();\n        eventManager.emit(Event.WillUnmount, instance);\n      };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, isToastIdValid } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => isToastIdValid(id) && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}