{"ast":null,"code":"var _jsxFileName = \"/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/src/components/ChatBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChatBoxStyle from './ChatBoxStyle';\nimport { Paper } from '@mui/material';\nimport ChatTop from './ChatTop';\nimport ChatBottom from './ChatBottom';\nimport axios from 'axios';\nimport { getMessageRoute, sendMessageRoute } from '../api/ApiRoutes';\nimport ChatMiddle from './ChatMiddle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = _ref => {\n  _s();\n\n  let {\n    current,\n    currentChatter,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrival, setArrival] = useState(null);\n  useEffect(() => {\n    async function fetchMessage() {\n      if (currentChatter) {\n        const response = await axios.post(getMessageRoute, {\n          sender: current._id,\n          receiver: currentChatter._id\n        });\n        setMessages(response.data);\n      }\n    }\n\n    fetchMessage();\n  }, [currentChatter]);\n\n  const handleMessageSend = async message => {\n    const temp = {\n      sender: current._id,\n      receiver: currentChatter._id,\n      message: message\n    };\n    await axios.post(sendMessageRoute, temp);\n    socket.current.emit(\"event-msg\", temp);\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: message\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        console.log(msg);\n        setArrival({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrival && setArrival(prev => [...prev, arrival]);\n  }, [arrival]);\n  const classes = ChatBoxStyle();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    position: \"fixed\",\n    sx: {\n      bgcolor: \"#F5F5F5\",\n      margin: \"2.5vh\",\n      height: \"95vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Content,\n      children: [/*#__PURE__*/_jsxDEV(ChatTop, {\n        currentChatter: currentChatter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMiddle, {\n        messages: messages,\n        sender: current,\n        receiver: currentChatter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBottom, {\n        handleSend: handleMessageSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBox, \"hB/UsgDTfbFNEDGHER04SVwVjgw=\");\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","ChatBoxStyle","Paper","ChatTop","ChatBottom","axios","getMessageRoute","sendMessageRoute","ChatMiddle","ChatBox","current","currentChatter","socket","messages","setMessages","arrival","setArrival","fetchMessage","response","post","sender","_id","receiver","data","handleMessageSend","message","temp","emit","msgs","push","fromSelf","on","msg","console","log","prev","classes","bgcolor","margin","height","Content"],"sources":["/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ChatBoxStyle from './ChatBoxStyle'\nimport { Paper } from '@mui/material';\nimport ChatTop from './ChatTop';\nimport ChatBottom from './ChatBottom';\nimport axios from 'axios';\nimport { getMessageRoute, sendMessageRoute } from '../api/ApiRoutes';\nimport ChatMiddle from './ChatMiddle';\n\nconst ChatBox = ({ current, currentChatter, socket }) => {\n\n  const [messages, setMessages] = useState([]);\n  const [arrival, setArrival] = useState(null);\n\n  useEffect(() => {\n    async function fetchMessage() {\n      if (currentChatter) {\n        const response = await axios.post(getMessageRoute, {\n          sender: current._id,\n          receiver: currentChatter._id,\n        })\n        setMessages(response.data);\n      }\n    }\n    fetchMessage()\n  }, [currentChatter]);\n\n  const handleMessageSend = async (message) => {\n    const temp = {\n      sender: current._id,\n      receiver: currentChatter._id,\n      message: message,\n    };\n    await axios.post(sendMessageRoute, temp);\n    socket.current.emit(\"event-msg\", temp);\n    const msgs = [...messages];\n    msgs.push({ fromSelf: true, message: message });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", (msg) => {\n        console.log(msg);\n        setArrival({ fromSelf: false, message: msg });\n      })\n    }\n  }, []);\n\n  useEffect(() => {\n    arrival && setArrival((prev) => [...prev, arrival]);\n  }, [arrival])\n\n\n  const classes = ChatBoxStyle();\n  return (\n    <Paper position=\"fixed\" sx={{ bgcolor: \"#F5F5F5\", margin: \"2.5vh\", height: \"95vh\" }}>\n      <div className={classes.Content}>\n        <ChatTop currentChatter={currentChatter} />\n        <ChatMiddle messages={messages} sender={current} receiver={currentChatter} />\n        <ChatBottom handleSend={handleMessageSend} />\n      </div>\n    </Paper>\n  )\n}\n\nexport default ChatBox"],"mappings":"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"},"metadata":{},"sourceType":"module"}