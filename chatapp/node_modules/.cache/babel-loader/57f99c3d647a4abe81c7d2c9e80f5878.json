{"ast":null,"code":"var _jsxFileName = \"/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/src/pages/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport RegisterStyle from './RegisterStyle';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from 'axios';\nimport { registerRoute } from '../api/ApiRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"light\"\n  };\n  const [credentials, setCredential] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [confirmPassword, setConfirmpassword] = useState(\"\");\n\n  const handleWrite = e => {\n    setCredential({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleConfirmed = e => {\n    setConfirmpassword(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    if (validate()) {\n      const {\n        data\n      } = await axios.post(registerRoute, credentials);\n\n      if (data.status === false) {\n        toast.error(data.msg, toastOptions);\n      }\n\n      if (data.status === true) {\n        localStorage.setItem('chat-app-user', JSON.stringify({\n          username: credentials.username,\n          password: credentials.password\n        }));\n        navigate(\"/\");\n      }\n    }\n  };\n\n  const validate = () => {\n    if (credentials.username.length < 5) {\n      toast.error(\"Username must have at least 5 characters\", toastOptions);\n      return false;\n    } else if (credentials.password.length < 8) {\n      toast.error(\"Password must have at least 8 characters\", toastOptions);\n      return false;\n    } else if (credentials.email.length < 1) {\n      toast.error(\"Email must not be empty\", toastOptions);\n      return false;\n    } else if (confirmPassword !== credentials.password) {\n      toast.error(\"Please ensure the Password and Comfirmed Password be same\", toastOptions);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const classes = RegisterStyle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Box,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"#500979\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"UserName\",\n        onChange: handleWrite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.Input,\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        onChange: handleWrite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.Input,\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: handleWrite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.Input,\n        type: \"password\",\n        placeholder: \"Comfirmed Password\",\n        name: \"ComfirmPassword\",\n        onChange: handleConfirmed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        onClick: handleSubmit,\n        children: \"Let's go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h7\",\n        color: \"#500979\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.Link,\n          to: \"/\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"qoS+gKa7LCNY1PxabXXl6cKD8jo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Typography","RegisterStyle","ToastContainer","toast","axios","registerRoute","Register","navigate","toastOptions","position","autoClose","closeOnClick","pauseOnHover","draggable","theme","credentials","setCredential","username","email","password","confirmPassword","setConfirmpassword","handleWrite","e","target","name","value","handleConfirmed","handleSubmit","validate","data","post","status","error","msg","localStorage","setItem","JSON","stringify","length","classes","Box","Input","Button"],"sources":["/Users/keqinyang/Desktop/Kevin-Chat-Room/chatapp/src/pages/Register.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Typography } from '@mui/material';\nimport RegisterStyle from './RegisterStyle';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from \"react-toastify\"\nimport axios from 'axios'\nimport { registerRoute } from '../api/ApiRoutes';\n\nconst Register = () => {\n    const navigate = useNavigate()\n    const toastOptions = {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"light\"\n    }\n\n    const [credentials, setCredential] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\"\n    })\n\n    const [confirmPassword, setConfirmpassword] = useState(\"\")\n\n    const handleWrite = (e) => {\n        setCredential({ ...credentials, [e.target.name]: e.target.value })\n    }\n\n    const handleConfirmed = (e) => {\n        setConfirmpassword(e.target.value);\n    }\n\n    const handleSubmit = async (e) => {\n        if(validate()){\n            const { data } = await axios.post(registerRoute, credentials);\n            if(data.status === false){\n                toast.error(data.msg, toastOptions);\n            }\n            if(data.status === true){\n                localStorage.setItem('chat-app-user', JSON.stringify({\n                    username: credentials.username,\n                    password: credentials.password,\n                }));\n                navigate(\"/\");\n            }\n            \n        }\n    }\n\n    const validate = () => {\n        if(credentials.username.length < 5){\n            toast.error(\"Username must have at least 5 characters\", toastOptions);\n            return false;\n        }\n        else if(credentials.password.length < 8){\n            toast.error(\"Password must have at least 8 characters\", toastOptions);\n            return false;\n        }\n        else if(credentials.email.length < 1){\n            toast.error(\"Email must not be empty\", toastOptions);\n            return false;\n        }\n        else if (confirmPassword !== credentials.password) {\n            toast.error(\"Please ensure the Password and Comfirmed Password be same\", toastOptions);\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n\n    const classes = RegisterStyle();\n    return (\n        <>\n            <div className={classes.Box}>\n                <Typography variant='h4' color=\"#500979\">\n                    Register\n                </Typography>\n                <input\n                    className={classes.Input}\n                    type=\"text\"\n                    name='username'\n                    placeholder='UserName'\n                    onChange={handleWrite}\n                />\n                <input\n                    className={classes.Input}\n                    type=\"email\"\n                    placeholder='Email'\n                    name='email'\n                    onChange={handleWrite}\n                />\n                <input\n                    className={classes.Input}\n                    type=\"password\"\n                    placeholder='Password'\n                    name='password'\n                    onChange={handleWrite}\n                />\n                <input\n                    className={classes.Input}\n                    type=\"password\"\n                    placeholder='Comfirmed Password'\n                    name='ComfirmPassword'\n                    onChange={handleConfirmed}\n                />\n                <button className={classes.Button} onClick={handleSubmit}>Let's go!</button>\n                <Typography variant='h7' color=\"#500979\">Already have an account? <Link className={classes.Link} to='/'>Login here</Link></Typography>\n            </div>\n            <ToastContainer />\n        </>\n\n        \n\n    )\n}\n\n\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}